;; Auto-generated. Do not edit!


(when (boundp 'gazebo_sfm_plugin::TaskAssignmentGoal)
  (if (not (find-package "GAZEBO_SFM_PLUGIN"))
    (make-package "GAZEBO_SFM_PLUGIN"))
  (shadow 'TaskAssignmentGoal (find-package "GAZEBO_SFM_PLUGIN")))
(unless (find-package "GAZEBO_SFM_PLUGIN::TASKASSIGNMENTGOAL")
  (make-package "GAZEBO_SFM_PLUGIN::TASKASSIGNMENTGOAL"))

(in-package "ROS")
;;//! \htmlinclude TaskAssignmentGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass gazebo_sfm_plugin::TaskAssignmentGoal
  :super ros::object
  :slots (_task_names _positions _target_types ))

(defmethod gazebo_sfm_plugin::TaskAssignmentGoal
  (:init
   (&key
    ((:task_names __task_names) (let (r) (dotimes (i 0) (push "" r)) r))
    ((:positions __positions) ())
    ((:target_types __target_types) (let (r) (dotimes (i 0) (push "" r)) r))
    )
   (send-super :init)
   (setq _task_names __task_names)
   (setq _positions __positions)
   (setq _target_types __target_types)
   self)
  (:task_names
   (&optional __task_names)
   (if __task_names (setq _task_names __task_names)) _task_names)
  (:positions
   (&rest __positions)
   (if (keywordp (car __positions))
       (send* _positions __positions)
     (progn
       (if __positions (setq _positions (car __positions)))
       _positions)))
  (:target_types
   (&optional __target_types)
   (if __target_types (setq _target_types __target_types)) _target_types)
  (:serialization-length
   ()
   (+
    ;; string[] _task_names
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _task_names)) 4
    ;; geometry_msgs/Point[] _positions
    (apply #'+ (send-all _positions :serialization-length)) 4
    ;; string[] _target_types
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _target_types)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string[] _task_names
     (write-long (length _task_names) s)
     (dolist (elem _task_names)
       (write-long (length elem) s) (princ elem s)
       )
     ;; geometry_msgs/Point[] _positions
     (write-long (length _positions) s)
     (dolist (elem _positions)
       (send elem :serialize s)
       )
     ;; string[] _target_types
     (write-long (length _target_types) s)
     (dolist (elem _target_types)
       (write-long (length elem) s) (princ elem s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string[] _task_names
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _task_names (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _task_names i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;; geometry_msgs/Point[] _positions
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _positions (let (r) (dotimes (i n) (push (instance geometry_msgs::Point :init) r)) r))
     (dolist (elem- _positions)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; string[] _target_types
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _target_types (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _target_types i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;;
   self)
  )

(setf (get gazebo_sfm_plugin::TaskAssignmentGoal :md5sum-) "9bcdd9e4ed3cb46133c77abe8391c30a")
(setf (get gazebo_sfm_plugin::TaskAssignmentGoal :datatype-) "gazebo_sfm_plugin/TaskAssignmentGoal")
(setf (get gazebo_sfm_plugin::TaskAssignmentGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Goal definition
string[] task_names
geometry_msgs/Point[] positions
string[] target_types

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :gazebo_sfm_plugin/TaskAssignmentGoal "9bcdd9e4ed3cb46133c77abe8391c30a")


